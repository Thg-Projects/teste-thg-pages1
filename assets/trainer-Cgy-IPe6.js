import"./essencial-DjFnyu8i.js";import"./init-CaxVF7j6.js";import{a as x,r as g,o as S,s as C}from"./firebaseFuncoes-B1sqI8Vj.js";import"https://www.gstatic.com/firebasejs/9.22.1/firebase-app.js";import"https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js";import"https://www.gstatic.com/firebasejs/9.22.1/firebase-database.js";function R(u){if(typeof u!="string"||u.trim().length===0)return"";const e=u.trim().split(" ");return e.length>0&&e[0].length>0?e[0].slice(0,2).toLowerCase():""}function D(){const u=document.querySelector('.tabs.responsive a[data-ui="#tab2"]'),e=document.querySelector("#fab_add_treino");u&&e?u.classList.contains("active")?e.style.display="block":e.style.display="none":console.warn("Elementos de aba ou FAB não encontrados para controle de visibilidade.")}class y{constructor(e,t,a,n,i,o){if(this.listaElement=document.querySelector(e.lista),this.inputSeqElement=document.querySelector(e.inputSeq),this.btnSalvarSeqElement=document.querySelector(e.btnSalvarSeq),this.firebaseBasePath=t,this.obterDados=a,this.adicionarItem=n,this.removerDados=i,this.onSequenceSelect=o,!this.listaElement||!this.inputSeqElement||!this.btnSalvarSeqElement){console.error("Erro: Um ou mais elementos DOM para GerenciadorSequencias não foram encontrados. Verifique os seletores.");return}this.setupEventListeners()}setupEventListeners(){this.btnSalvarSeqElement.addEventListener("click",this.handleSaveSequence.bind(this)),this.listaElement.addEventListener("click",this.handleListClick.bind(this))}handleListClick(e){const t=e.target;if(t.classList.contains("remove-sequence-button")){const a=t.closest("article.sequencia-card");if(a){const n=a.dataset.sequenceId;n?(console.log(`Botão Remover clicado para a sequência ${n}`),this.handleRemoveSequence(n)):console.warn("ID da sequência não encontrado no card para remover.")}}else{const a=t.closest("article.sequencia-card");if(a){const n=a.dataset.sequenceId;n&&this.onSequenceSelect&&(console.log(`Card de sequência clicado: ${n}`),this.onSequenceSelect(n))}}}async handleSaveSequence(){const e=this.inputSeqElement.value.trim();if(e===""){console.warn("Nome da sequência não pode estar vazio.");return}const t=`${this.firebaseBasePath}/sequencias`,a={nome:e,exercicios:{}};try{const n=await this.adicionarItem(t,a);console.log("Nova sequência adicionada ao Firebase:",n),this.inputSeqElement.value="",this.renderSequences()}catch(n){console.error("Falha ao adicionar nova sequência:",n)}}async handleRemoveSequence(e){if(!e){console.warn("handleRemoveSequence chamado sem um sequenceId válido.");return}if(!confirm("Tem certeza que deseja remover a sequência?")){console.log("Remoção de sequência cancelada pelo usuário.");return}const t=`${this.firebaseBasePath}/sequencias/${e}`;try{await this.removerDados(t),console.log(`Sequência ${e} removida do Firebase.`),this.renderSequences()}catch(a){console.error(`Falha ao remover sequência ${e}:`,a)}}async renderSequences(){this.listaElement.innerHTML="";try{const e=await this.obterDados(this.firebaseBasePath);let t=null;if(e&&typeof e=="object"&&(e.treinamento&&typeof e.treinamento=="object"&&e.treinamento.sequencias&&typeof e.treinamento.sequencias=="object"?t=e.treinamento.sequencias:e.sequencias&&typeof e.sequencias=="object"&&(t=e.sequencias)),t&&typeof t=="object"){const a=Object.keys(t);if(a.length===0){console.log("Nenhuma sequência encontrada no Firebase para renderizar."),this.listaElement.innerHTML="<p>Nenhuma sequência adicionada ainda. Use o campo acima para adicionar a primeira!</p>";return}a.forEach((n,i)=>{const o=t[n];if(!o||typeof o!="object"){console.warn(`Dados inválidos para a sequência com chave ${n}. Pulando renderização.`);return}const r=this.createSequenceCard(n,o);this.listaElement.appendChild(r)}),console.log(`Renderizadas ${a.length} sequências.`)}else console.log("Nenhum dado de sequências válido encontrado no Firebase."),this.listaElement.innerHTML="<p>Nenhum dado de sequência válido encontrado.</p>"}catch(e){console.error("Erro ao renderizar sequências:",e),this.listaElement.innerHTML='<p style="color: red;">Erro ao carregar sequências.</p>'}}createSequenceCard(e,t){const a=document.createElement("article");a.className="bg-dark sequencia-card",a.dataset.sequenceId=e;const n=document.createElement("h5");n.textContent=t.nome||"Sequência Sem Nome";const i=document.createElement("button");i.classList.add("remove-sequence-button"),i.innerHTML='<i>close</i><div class="tooltip bottom">Remover Sequencia</div>',n.appendChild(i),a.appendChild(n);const o=document.createElement("div");o.className="space",a.appendChild(o);const r=document.createElement("div");r.className="tas responsive";const s=t.exercicios||{},d=Object.values(s),h=3;for(let p=0;p<d.length;p++){const E=d[p];if(p<h){const c=document.createElement("button");c.className="chip fill",c.style.margin=" 7px 0px";const l=document.createElement("i");l.textContent="done";const m=document.createElement("span");m.textContent=E.nome||"Exercício Sem Nome",c.appendChild(l),c.appendChild(m),r.appendChild(c)}else if(p===h){const c=document.createElement("button");c.className="chip fill",c.style.margin=" 7px 0px";const l=document.createElement("i");l.textContent="more_horiz";const m=document.createElement("span"),v=d.length-h;m.textContent=`${E.nome||"..."} +${v} treinos...`,c.appendChild(l),c.appendChild(m),r.appendChild(c);break}}return a.appendChild(r),a}startRendering(){this.renderSequences()}}class I{constructor(e,t,a,n,i,o,r=[],s){if(this.nomeSequenciaElement=document.querySelector(e.nomeSequencia),this.countExercicioElement=document.querySelector(e.countExercicio),this.listaDeExerciciosElement=document.querySelector(e.listaDeExercicios),this.inputTreinoNomeElement=s.querySelector(e.inputTreinoNome),this.inpRepeticaoElement=s.querySelector(e.inpRepeticao),this.inpSeriesElement=s.querySelector(e.inpSeries),this.inpCargaElement=s.querySelector(e.inpCarga),this.btnSalvarTreinoElement=s.querySelector(e.btnSalvarTreino),this.btnRemoverExercicioDialogElement=null,this.menuTreinosElement=s.querySelector(e.menuTreinos),this.searchBoxElement=s.querySelector(e.searchBox),this.btnRepAddElement=s.querySelector(`#${e.btnRepAddId}`),this.btnRepRemoveElement=s.querySelector(`#${e.btnRepRemoveId}`),this.btnSeriesAddElement=s.querySelector(`#${e.btnSeriesAddId}`),this.btnSeriesRemoveElement=s.querySelector(`#${e.btnSeriesRemoveId}`),this.btnCargaAddElement=s.querySelector(`#${e.btnCargaAddId}`),this.btnCargaRemoveElement=s.querySelector(`#${e.btnCargaRemoveId}`),this.firebaseBasePath=t,this.obterDados=a,this.adicionarItem=n,this.salvarDados=i,this.removerDados=o,this.listaExerciciosAcademia=r,this.treinoDialogElement=s,this.selectedSequenceId=null,this.editingExerciseId=null,!this.nomeSequenciaElement||!this.countExercicioElement||!this.listaDeExerciciosElement||!this.inputTreinoNomeElement||!this.inpRepeticaoElement||!this.inpSeriesElement||!this.inpCargaElement||!this.btnSalvarTreinoElement||!this.menuTreinosElement||!this.searchBoxElement||!this.btnRepAddElement||!this.btnRepRemoveElement||!this.btnSeriesAddElement||!this.btnSeriesRemoveElement||!this.btnCargaAddElement||!this.btnCargaRemoveElement||!this.treinoDialogElement){console.error("Erro: Um ou mais elementos DOM para GerenciadorDetalhesSequencia não foram encontrados. Verifique os seletores e a referência do dialog.");return}const d=document.querySelector("#fab_add_treino button");d?d.addEventListener("click",this.openDialogForAdd.bind(this)):console.warn("Botão FAB para adicionar treino não encontrado."),this.init()}init(){this.populateExerciseMenu(),this.setupCounterListeners(),this.setupEventListeners(),this.setupDialogEventListeners()}setupEventListeners(){this.menuTreinosElement.addEventListener("click",this.handleExerciseMenuItemClick.bind(this)),this.listaDeExerciciosElement.addEventListener("click",this.handleExerciseListClick.bind(this))}setupDialogEventListeners(){this.btnSalvarTreinoElement.addEventListener("click",this.handleSaveExerciseClick.bind(this));const e=this.treinoDialogElement.querySelector('button[data-ui="#treinoDiaglog"].transparent.link');e?e.addEventListener("click",this.closeDialog.bind(this)):console.warn("Botão Cancelar do dialog de treino não encontrado."),this.treinoDialogElement.addEventListener("close",this.resetDialog.bind(this))}handleExerciseListClick(e){const t=e.target;if(t.classList.contains("small")&&t.textContent.toLowerCase()==="editar"){const a=t.closest(".li-card-min");if(a){const n=a.dataset.exerciseId;n&&this.selectedSequenceId?(console.log(`Botão Editar clicado para exercício ${n} na sequência ${this.selectedSequenceId}`),this.openDialogForEdit(this.selectedSequenceId,n)):console.warn("IDs de sequência ou exercício não encontrados no mini card para editar.")}}}async loadAndRenderSequenceDetails(e){if(this.selectedSequenceId=e,this.listaDeExerciciosElement.innerHTML="",!e){console.warn("loadAndRenderSequenceDetails chamado sem um sequenceId válido."),this.nomeSequenciaElement.textContent="Selecione uma Sequência",this.countExercicioElement.textContent="0 Exercícios";return}try{const t=`${this.firebaseBasePath}/sequencias/${e}`,a=await this.obterDados(t);if(a&&typeof a=="object"){this.nomeSequenciaElement.textContent=a.nome||"Sequência Sem Nome";const n=a.exercicios||{},i=Object.keys(n);this.countExercicioElement.textContent=`${i.length} Exercícios`,i.forEach(o=>{const r=n[o];if(r&&typeof r=="object"){const s=this.createExerciseMiniCard(o,r);this.listaDeExerciciosElement.appendChild(s)}else console.warn(`Dados inválidos para o exercício ${o} na sequência ${e}.`)})}else console.log(`Nenhum dado encontrado para a sequência ${e}.`),this.nomeSequenciaElement.textContent="Sequência Não Encontrada",this.countExercicioElement.textContent="0 Exercícios"}catch(t){console.error(`Erro ao carregar detalhes da sequência ${e}:`,t),this.nomeSequenciaElement.textContent="Erro ao Carregar Sequência",this.countExercicioElement.textContent="Erro"}}createExerciseMiniCard(e,t){const a=document.createElement("li");a.classList.add("li-card-min"),a.dataset.exerciseId=e;const n=document.createElement("button");n.classList.add("circle"),n.textContent=R(t.nome||"");const i=document.createElement("div");i.classList.add("max","responsive");const o=document.createElement("h6");o.classList.add("small"),o.textContent=t.nome||"Exercício Sem Nome";const r=document.createElement("nav");r.innerHTML=`
            <span>${t.series||"0"} series</span>X
            <span>${t.repeticoes||"0"} repetições</span>X
            <span>${t.carga||"A definir"} carga</span>
        `,i.appendChild(o),i.appendChild(r);const s=document.createElement("button");return s.classList.add("small","edit-exercise-button"),s.style.width="min-content",s.textContent="editar",a.appendChild(n),a.appendChild(i),a.appendChild(s),a}populateExerciseMenu(){this.menuTreinosElement&&(this.menuTreinosElement.innerHTML="",this.listaExerciciosAcademia.forEach(e=>{const t=document.createElement("li");t.innerHTML=`<i>history</i>
                            <div>${e}</div>`,this.menuTreinosElement.appendChild(t)}))}handleExerciseMenuItemClick(e){const a=e.target.closest("li");if(a&&this.menuTreinosElement.contains(a)){const n=a.querySelector("div"),i=n?n.innerText.trim():"";i&&this.searchBoxElement&&(this.searchBoxElement.value=i)}}setupCounterListeners(){this.btnRepAddElement&&this.inpRepeticaoElement&&this.btnRepRemoveElement?(this.btnRepAddElement.addEventListener("click",()=>this.handleIncrementClick(this.inpRepeticaoElement)),this.btnRepRemoveElement.addEventListener("click",()=>this.handleDecrementClick(this.inpRepeticaoElement))):console.warn("Elementos de repetição do dialog não encontrados."),this.btnSeriesAddElement&&this.inpSeriesElement&&this.btnSeriesRemoveElement?(this.btnSeriesAddElement.addEventListener("click",()=>this.handleIncrementClick(this.inpSeriesElement)),this.btnSeriesRemoveElement.addEventListener("click",()=>this.handleDecrementClick(this.inpSeriesElement))):console.warn("Elementos de série do dialog não encontrados."),this.btnCargaAddElement&&this.inpCargaElement&&this.btnCargaRemoveElement?(this.btnCargaAddElement.addEventListener("click",()=>this.handleIncrementClick(this.inpCargaElement)),this.btnCargaRemoveElement.addEventListener("click",()=>this.handleDecrementClick(this.inpCargaElement))):console.warn("Elementos de carga do dialog não encontrados.")}handleIncrementClick(e){let t=parseInt(e.value);isNaN(t)&&(t=0),e.value=t+1}handleDecrementClick(e){let t=parseInt(e.value);isNaN(t)||t<=0?t=0:t--,e.value=t}getCurrentExerciseDetailsFromDialog(){const e=this.inputTreinoNomeElement?this.inputTreinoNomeElement.value.trim():"",t=this.inpSeriesElement?this.inpSeriesElement.value.trim():"0",a=this.inpRepeticaoElement?this.inpRepeticaoElement.value.trim():"0",n=this.inpCargaElement?this.inpCargaElement.value.trim():"0";return e===""?(console.warn("Nome do exercício está vazio."),null):{nome:e,series:t,repeticoes:a,carga:n}}async handleSaveExerciseClick(){if(!this.selectedSequenceId){console.warn("Nenhuma sequência selecionada para salvar o exercício."),alert("Por favor, selecione uma sequência primeiro.");return}const e=this.getCurrentExerciseDetailsFromDialog();if(!e){alert("Por favor, preencha o nome do exercício.");return}let t,a;this.editingExerciseId?(t=`${this.firebaseBasePath}/sequencias/${this.selectedSequenceId}/exercicios/${this.editingExerciseId}`,a="update"):(t=`${this.firebaseBasePath}/sequencias/${this.selectedSequenceId}/exercicios`,a="add");try{if(a==="add"){const n=await this.adicionarItem(t,e);console.log("Novo exercício adicionado ao Firebase:",n),alert("Exercício adicionado com sucesso!")}else await this.salvarDados(t,e),console.log(`Exercício ${this.editingExerciseId} atualizado no Firebase.`),alert("Exercício atualizado com sucesso!");this.closeDialog(),this.loadAndRenderSequenceDetails(this.selectedSequenceId)}catch(n){console.error(`Falha ao ${a} exercício:`,n)}}async handleRemoveExerciseFromDialog(){if(!this.editingExerciseId||!this.selectedSequenceId){console.warn("handleRemoveExerciseFromDialog chamado sem IDs válidos."),alert("Não foi possível determinar qual exercício remover.");return}if(!confirm("Tem certeza que deseja remover este exercício?")){console.log("Remoção de exercício cancelada pelo usuário.");return}const e=`${this.firebaseBasePath}/sequencias/${this.selectedSequenceId}/exercicios/${this.editingExerciseId}`;try{await this.removerDados(e),console.log(`Exercício ${this.editingExerciseId} removido do Firebase.`),alert("Exercício removido com sucesso!"),this.closeDialog(),this.loadAndRenderSequenceDetails(this.selectedSequenceId)}catch(t){console.error(`Falha ao remover exercício ${this.editingExerciseId}:`,t)}}openDialogForAdd(){if(!this.selectedSequenceId){console.warn("Nenhuma sequência selecionada para adicionar o exercício."),alert("Por favor, selecione uma sequência primeiro para adicionar exercícios.");return}this.editingExerciseId=null,this.resetDialogInputs(),this.updateDialogButtons("add"),this.treinoDialogElement.showModal()}async openDialogForEdit(e,t){if(!e||!t){console.warn("openDialogForEdit chamado sem IDs válidos.");return}this.selectedSequenceId=e,this.editingExerciseId=t;const a=`${this.firebaseBasePath}/sequencias/${e}/exercicios/${t}`;try{const n=await this.obterDados(a);n&&typeof n=="object"?(this.inputTreinoNomeElement&&(this.inputTreinoNomeElement.value=n.nome||""),this.inpRepeticaoElement&&(this.inpRepeticaoElement.value=n.repeticoes||"0"),this.inpSeriesElement&&(this.inpSeriesElement.value=n.series||"0"),this.inpCargaElement&&(this.inpCargaElement.value=n.carga||""),this.updateDialogButtons("edit"),this.treinoDialogElement.showModal()):(console.warn(`Dados do exercício ${t} não encontrados para edição.`),alert("Não foi possível carregar os dados do exercício para edição."))}catch(n){console.error(`Erro ao carregar dados do exercício ${t} para edição:`,n),alert("Erro ao carregar dados do exercício para edição.")}}closeDialog(){this.treinoDialogElement&&this.treinoDialogElement.close()}resetDialog(){console.log("Dialog fechado. Resetando estado."),this.resetDialogInputs(),this.editingExerciseId=null,this.btnRemoverExercicioDialogElement&&this.btnRemoverExercicioDialogElement.parentNode&&(this.btnRemoverExercicioDialogElement.parentNode.removeChild(this.btnRemoverExercicioDialogElement),this.btnRemoverExercicioDialogElement=null),this.updateDialogButtons("add")}resetDialogInputs(){this.inputTreinoNomeElement&&(this.inputTreinoNomeElement.value=""),this.inpRepeticaoElement&&(this.inpRepeticaoElement.value="0"),this.inpSeriesElement&&(this.inpSeriesElement.value="0"),this.inpCargaElement&&(this.inpCargaElement.value="0"),this.searchBoxElement&&(this.searchBoxElement.value="")}updateDialogButtons(e){const t=this.treinoDialogElement.querySelector("nav.responsive");if(!t){console.warn("Elemento nav.responsive do dialog não encontrado para atualizar botões.");return}if(this.btnRemoverExercicioDialogElement&&this.btnRemoverExercicioDialogElement.parentNode&&(this.btnRemoverExercicioDialogElement.parentNode.removeChild(this.btnRemoverExercicioDialogElement),this.btnRemoverExercicioDialogElement=null),e==="add")this.btnSalvarTreinoElement.textContent="Salvar";else{this.btnSalvarTreinoElement.textContent="Atualizar";const a=document.createElement("button");a.classList.add("transparent","link","remove-exercise-dialog-button"),a.textContent="Remover Exercício",a.style.color="red",a.addEventListener("click",this.handleRemoveExerciseFromDialog.bind(this)),t.insertBefore(a,this.btnSalvarTreinoElement),this.btnRemoverExercicioDialogElement=a}}selectSequence(e){this.loadAndRenderSequenceDetails(e)}}class L{constructor(e,t,a,n,i,o){if(this.containerElement=document.getElementById(e.containerId),this.firebaseBasePath=t,this.obterDados=a,this.salvarDados=n,this.removerDados=i,this.adicionarItem=o,!this.containerElement){console.error(`Erro: Elemento container com ID "${e.containerId}" para RenderizadorFichaTreinoTable não encontrado.`);return}this.setupSheetEventListeners()}setupSheetEventListeners(){this.containerElement.addEventListener("click",async e=>{const t=e.target;if(t.classList.contains("remove-exercise-table-button")&&console.warn("Botão 'Remover Exercício' clicado na tabela. Implemente a lógica de remoção e a adição do botão na renderização."),t.id==="add-new-sequence-table"){console.log("Tentando adicionar nova sequência (via tabela)...");const a=`${this.firebaseBasePath}/sequencias`,n=await this.obterDados(this.firebaseBasePath);let i=0;n&&typeof n=="object"&&(n.treinamento&&typeof n.treinamento=="object"&&n.treinamento.sequencias?i=Object.keys(n.treinamento.sequencias).length:n.sequencias&&(i=Object.keys(n.sequencias).length));const o={nome:`Sequência ${i+1}`,exercicios:{}};try{const r=await this.adicionarItem(a,o);console.log("Nova sequência adicionada ao Firebase. Atualizando UI..."),this.renderSheet()}catch(r){console.error("Falha ao adicionar nova sequência:",r)}}t.id==="save-workout-table"&&console.warn("Botão 'Salvar Ficha Completa' clicado na view de tabela. Implemente a lógica de coleta e salvamento dos dados editáveis (se aplicável).")})}async renderSheet(){this.containerElement.innerHTML="";try{console.log("Carregando dados completos de treino do Firebase para renderizar ficha (Tabela)...");const e=await this.obterDados(this.firebaseBasePath);console.log("Dados carregados para ficha (Tabela):",e);let t=null;if(e&&typeof e=="object"&&(e.treinamento&&typeof e.treinamento=="object"&&e.treinamento.sequencias&&typeof e.treinamento.sequencias=="object"?t=e.treinamento.sequencias:e.sequencias&&typeof e.sequencias=="object"&&(t=e.sequencias)),!t||typeof t!="object"||Object.keys(t).length===0){console.log("Nenhuma sequência encontrada no Firebase para renderizar tabela."),this.containerElement.innerHTML="<p>Nenhuma sequência adicionada ainda.</p>";return}const a=Object.keys(t);console.log(`Gerando tabelas para ${a.length} sequências.`),a.forEach(n=>{const i=t[n];if(!i||typeof i!="object"){console.warn(`Dados inválidos para a sequência com chave ${n} ao renderizar tabela. Pulando.`);return}const o=document.createElement("table"),r=document.createElement("caption");r.textContent=i.nome?`Sequência - ${i.nome.replace("seq","").trim()}`:"Sequência Sem Nome",o.appendChild(r);const s=document.createElement("thead"),d=document.createElement("tr"),h=["Exercício","Séries","Repetições","Carga"];h.forEach(E=>{const c=document.createElement("th");c.textContent=E,d.appendChild(c)}),s.appendChild(d),o.appendChild(s);const p=document.createElement("tbody");if(i.exercicios&&typeof i.exercicios=="object"){const E=Object.keys(i.exercicios);if(E.length===0){const c=document.createElement("tr"),l=document.createElement("td");l.textContent="Nenhum exercício adicionado a esta sequência.",l.setAttribute("colspan",h.length),l.style.textAlign="center",l.style.fontStyle="italic",p.appendChild(c)}else E.forEach(c=>{const l=i.exercicios[c];if(l&&typeof l=="object"){const m=document.createElement("tr"),v=document.createElement("td");v.textContent=l.nome||"Exercício Sem Nome",m.appendChild(v);const b=document.createElement("td");b.textContent=l.series?`${l.series}x`:"0x",m.appendChild(b);const q=document.createElement("td");q.textContent=l.repeticoes||"0",m.appendChild(q);const f=document.createElement("td");f.textContent=l.carga&&l.carga!=="0"?l.carga:"A definir",m.appendChild(f),p.appendChild(m)}else console.warn(`Dados inválidos para o exercício ${c} ao renderizar tabela.`)})}else{console.log(`Nenhum objeto de exercícios encontrado ou válido para a sequência "${i.nome}" (Chave: ${n}) ao renderizar tabela.`);const E=document.createElement("tr"),c=document.createElement("td");c.textContent="Nenhum exercício adicionado a esta sequência.",c.setAttribute("colspan",h.length),c.style.textAlign="center",c.style.fontStyle="italic",p.appendChild(E)}o.appendChild(p),this.containerElement.appendChild(o)}),console.log("Renderização da ficha de treino completa (Tabela) concluída.")}catch(e){console.error("Erro ao carregar dados para renderizar ficha (Tabela):",e),this.containerElement.innerHTML='<p style="color: red;">Erro ao carregar a ficha de treino.</p>'}}startRendering(){this.renderSheet()}}document.addEventListener("DOMContentLoaded",async()=>{const e="/usuarios/cI9RMQlExBUB1YAYkE1nDfBKxFC3/treinamento",t={salvarDados:typeof C<"u"?C:console.error("salvarDados não definido"),obterDados:typeof S<"u"?S:console.error("obterDados não definido"),removerDados:typeof g<"u"?g:console.error("removerDados não definido"),adicionarItem:typeof x<"u"?x:console.error("adicionarItem não definido")};if(Object.values(t).some(d=>typeof d!="function")){console.error("Uma ou mais funções Firebase essenciais não estão definidas. Verifique suas importações/escopo."),document.body.innerHTML='<p style="color: red;">Erro ao carregar funcionalidades do Firebase. Verifique o console.</p>';return}const a=["Agachamento Livre","Agachamento Smith","Leg Press","Cadeira Extensora","Cadeira Flexora","Stiff","Levantamento Terra Romeno","Afundo (ou Avanço)","Cadeira Abdutora","Cadeira Adutora","Panturrilha em Pé","Panturrilha Sentado","Supino Reto com Barra","Supino Reto com Halteres","Supino Inclinado com Barra","Supino Inclinado com Halteres","Supino Declinado","Crucifixo Reto com Halteres","Crucifixo Inclinado com Halteres","Cross Over (Polia Alta)","Flexão de Braço","Barra Fixa (Pull-up)","Puxada Alta (Lat Pulldown)","Remada Curvada com Barra","Remada com Halteres (Serrote)","Remada Baixa (Cavalo)","Remada Sentada na Polia Baixa","Levantamento Terra","Desenvolvimento com Barra (Overhead Press)","Desenvolvimento com Halteres Sentado","Elevação Lateral com Halteres","Elevação Frontal com Halteres","Remada Alta com Barra","Crucifixo Invertido (Peck Deck ou Halteres)","Rosca Direta com Barra","Rosca Direta com Halteres","Rosca Alternada com Halteres","Rosca Scott","Rosca Concentrada","Tríceps Pulley (Barra Reta ou Corda)","Tríceps Testa com Barra ou Halteres","Tríceps Francês (com Haltere ou Barra)","Paralelas (Dips)","Tríceps Coice","Prancha","Prancha Lateral","Abdominal Crunch","Elevação de Pernas","Abdominal Bicicleta","Russian Twist","Hiperextensão Lombar","Esteira (Corrida/Caminhada)","Elíptico","Bicicleta Ergométrica (Vertical/Horizontal)","Simulador de Escada (Stairmill)","Remo (Máquina de Remo)","Pular Corda"],n=document.getElementById("treinoDiaglog");if(!n){console.error("Erro: Elemento dialog #treinoDiaglog não encontrado após criação dinâmica.");return}const i=new y({lista:".lista_de_sequecias",inputSeq:"#input_Seq",btnSalvarSeq:"#btn_salvarSeq"},e,t.obterDados,t.adicionarItem,t.removerDados,d=>{console.log("Sequência selecionada na aba 1:",d);var h=document.querySelector('.tabs.responsive a[data-ui="#tab2"]');h&&h.click(),o.selectSequence(d)}),o=new I({nomeSequencia:".nome_sequencia",countExercicio:".count_exercicio",listaDeExercicios:".lista_de_exercicios",inputTreinoNome:"#input_treinoNome",inpRepeticao:"#inp_repeticao",inpSeries:"#inp_series",inpCarga:"#inp_carga",btnSalvarTreino:"#btn_salvarTreino",menuTreinos:"#menuTreinos",searchBox:".searchBox",btnRepAddId:"btn-rep-add",btnRepRemoveId:"btn-rep-remove",btnSeriesAddId:"btn-series-add",btnSeriesRemoveId:"btn-series-remove",btnCargaAddId:"btn-carga-add",btnCargaRemoveId:"btn-carga-remove"},e,t.obterDados,t.adicionarItem,t.salvarDados,t.removerDados,a,n),r=new L({containerId:"container-da-tabela"},e,t.obterDados,t.salvarDados,t.removerDados,t.adicionarItem);i.startRendering(),r.startRendering();var s=document.querySelector('.tabs.responsive a[data-ui="#tab2"]');s.addEventListener("click",async()=>{r.startRendering()}),document.querySelectorAll(".tabs.responsive a").forEach(d=>{d.addEventListener("click",()=>{setTimeout(D,1e3)})}),D()});
